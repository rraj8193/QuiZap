// Generated by view binder compiler. Do not edit!
package com.example.quizap.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.quizap.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLogInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView4;

  @NonNull
  public final EditText collegeid;

  @NonNull
  public final EditText emailid;

  @NonNull
  public final Button login;

  @NonNull
  public final EditText password;

  @NonNull
  public final TextView textView4;

  private ActivityLogInBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView4,
      @NonNull EditText collegeid, @NonNull EditText emailid, @NonNull Button login,
      @NonNull EditText password, @NonNull TextView textView4) {
    this.rootView = rootView;
    this.cardView4 = cardView4;
    this.collegeid = collegeid;
    this.emailid = emailid;
    this.login = login;
    this.password = password;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLogInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLogInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_log_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLogInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView4;
      CardView cardView4 = rootView.findViewById(id);
      if (cardView4 == null) {
        break missingId;
      }

      id = R.id.collegeid;
      EditText collegeid = rootView.findViewById(id);
      if (collegeid == null) {
        break missingId;
      }

      id = R.id.emailid;
      EditText emailid = rootView.findViewById(id);
      if (emailid == null) {
        break missingId;
      }

      id = R.id.login;
      Button login = rootView.findViewById(id);
      if (login == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = rootView.findViewById(id);
      if (password == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = rootView.findViewById(id);
      if (textView4 == null) {
        break missingId;
      }

      return new ActivityLogInBinding((ConstraintLayout) rootView, cardView4, collegeid, emailid,
          login, password, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
